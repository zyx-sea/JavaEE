<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--   namespace命名空间，未来对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用 -->
  <mapper namespace="test">
  <!-- 在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象
mapper.xml以statement为单位管理sql语句
 -->

	<!-- 根据id查询用户信息 -->
	<!-- 
		id：唯一标识 一个statement
		#{}：表示 一个占位符，如果#{}中传入简单类型的参数，#{}中的名称随意
		parameterType：输入 参数的类型，通过#{}接收parameterType输入 的参数
		resultType：输出结果 类型，不管返回是多条还是单条，指定单条记录映射的pojo类型
	 -->
  <select id ="findUserById" parameterType="int" resultType="cn.qd.mybatis.pojo.User">
  SELECT * FROM USER WHERE id=#{id}
  </select>
  
  <!-- 根据用户名称查询 -->
  <select id="findUserByName" parameterType="java.lang.String" resultType="cn.qd.mybatis.pojo.User">
  
  </select>
  </mapper>